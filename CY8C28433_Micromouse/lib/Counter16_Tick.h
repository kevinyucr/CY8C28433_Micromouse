//*****************************************************************************
//*****************************************************************************
//  FILENAME: Counter16_Tick.h
//   Version: 2.5, Updated on 2012/9/21 at 11:58:0
//  Generated by PSoC Designer 5.3.2710
//
//  DESCRIPTION: Counter16 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2012. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef Counter16_Tick_INCLUDE
#define Counter16_Tick_INCLUDE

#include <m8c.h>

#pragma fastcall16 Counter16_Tick_EnableInt
#pragma fastcall16 Counter16_Tick_DisableInt
#pragma fastcall16 Counter16_Tick_Start
#pragma fastcall16 Counter16_Tick_Stop
#pragma fastcall16 Counter16_Tick_wReadCounter              // Read  DR0
#pragma fastcall16 Counter16_Tick_WritePeriod               // Write DR1
#pragma fastcall16 Counter16_Tick_wReadCompareValue         // Read  DR2
#pragma fastcall16 Counter16_Tick_WriteCompareValue         // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 wCounter16_Tick_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 wCounter16_Tick_ReadCompareValue         // Read  DR2 (Deprecated)

//-------------------------------------------------
// Prototypes of the Counter16_Tick API.
//-------------------------------------------------
extern void Counter16_Tick_EnableInt(void);                           // Proxy Class 1
extern void Counter16_Tick_DisableInt(void);                          // Proxy Class 1
extern void Counter16_Tick_Start(void);                               // Proxy Class 1
extern void Counter16_Tick_Stop(void);                                // Proxy Class 1
extern WORD Counter16_Tick_wReadCounter(void);                        // Proxy Class 2
extern void Counter16_Tick_WritePeriod(WORD wPeriod);                 // Proxy Class 1
extern WORD Counter16_Tick_wReadCompareValue(void);                   // Proxy Class 1
extern void Counter16_Tick_WriteCompareValue(WORD wCompareValue);     // Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern WORD wCounter16_Tick_ReadCounter(void);            // Deprecated
extern WORD wCounter16_Tick_ReadCompareValue(void);       // Deprecated


//--------------------------------------------------
// Constants for Counter16_Tick API's.
//--------------------------------------------------

#define Counter16_Tick_CONTROL_REG_START_BIT   ( 0x01 )
#define Counter16_Tick_INT_REG_ADDR            ( 0x0e1 )
#define Counter16_Tick_INT_MASK                ( 0x02 )


//--------------------------------------------------
// Constants for Counter16_Tick user defined values
//--------------------------------------------------

#define Counter16_Tick_PERIOD                  ( 0x18f )
#define Counter16_Tick_COMPARE_VALUE           ( 0x0 )


//-------------------------------------------------
// Register Addresses for Counter16_Tick
//-------------------------------------------------

#pragma ioport  Counter16_Tick_COUNTER_LSB_REG: 0x020      //DR0 Counter register LSB
BYTE            Counter16_Tick_COUNTER_LSB_REG;
#pragma ioport  Counter16_Tick_COUNTER_MSB_REG: 0x024      //DR0 Counter register MSB
BYTE            Counter16_Tick_COUNTER_MSB_REG;
#pragma ioport  Counter16_Tick_PERIOD_LSB_REG:  0x021      //DR1 Period register LSB
BYTE            Counter16_Tick_PERIOD_LSB_REG;
#pragma ioport  Counter16_Tick_PERIOD_MSB_REG:  0x025      //DR1 Period register MSB
BYTE            Counter16_Tick_PERIOD_MSB_REG;
#pragma ioport  Counter16_Tick_COMPARE_LSB_REG: 0x022      //DR2 Compare register LSB
BYTE            Counter16_Tick_COMPARE_LSB_REG;
#pragma ioport  Counter16_Tick_COMPARE_MSB_REG: 0x026      //DR2 Compare register MSB
BYTE            Counter16_Tick_COMPARE_MSB_REG;
#pragma ioport  Counter16_Tick_CONTROL_LSB_REG: 0x023      //Control register LSB
BYTE            Counter16_Tick_CONTROL_LSB_REG;
#pragma ioport  Counter16_Tick_CONTROL_MSB_REG: 0x027      //Control register MSB
BYTE            Counter16_Tick_CONTROL_MSB_REG;
#pragma ioport  Counter16_Tick_FUNC_LSB_REG:    0x120      //Function register LSB
BYTE            Counter16_Tick_FUNC_LSB_REG;
#pragma ioport  Counter16_Tick_FUNC_MSB_REG:    0x124      //Function register MSB
BYTE            Counter16_Tick_FUNC_MSB_REG;
#pragma ioport  Counter16_Tick_INPUT_LSB_REG:   0x121      //Input register LSB
BYTE            Counter16_Tick_INPUT_LSB_REG;
#pragma ioport  Counter16_Tick_INPUT_MSB_REG:   0x125      //Input register MSB
BYTE            Counter16_Tick_INPUT_MSB_REG;
#pragma ioport  Counter16_Tick_OUTPUT_LSB_REG:  0x122      //Output register LSB
BYTE            Counter16_Tick_OUTPUT_LSB_REG;
#pragma ioport  Counter16_Tick_OUTPUT_MSB_REG:  0x126      //Output register MSB
BYTE            Counter16_Tick_OUTPUT_MSB_REG;
#pragma ioport  Counter16_Tick_INT_REG:       0x0e1        //Interrupt Mask Register
BYTE            Counter16_Tick_INT_REG;


//-------------------------------------------------
// Counter16_Tick Macro 'Functions'
//-------------------------------------------------

#define Counter16_Tick_Start_M \
   ( Counter16_Tick_CONTROL_LSB_REG |=  Counter16_Tick_CONTROL_REG_START_BIT )

#define Counter16_Tick_Stop_M  \
   ( Counter16_Tick_CONTROL_LSB_REG &= ~Counter16_Tick_CONTROL_REG_START_BIT )

#define Counter16_Tick_EnableInt_M   \
   M8C_EnableIntMask(  Counter16_Tick_INT_REG, Counter16_Tick_INT_MASK )

#define Counter16_Tick_DisableInt_M  \
   M8C_DisableIntMask( Counter16_Tick_INT_REG, Counter16_Tick_INT_MASK )

#endif
// end of file Counter16_Tick.h
