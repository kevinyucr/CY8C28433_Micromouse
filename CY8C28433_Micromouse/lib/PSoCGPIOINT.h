/******************************************************************************
*  Generated by PSoC Designer 5.3.2710
******************************************************************************/
#include <m8c.h>
/*
*   PSoCGPIOINT.h
*   Data: 04 June, 2002
*   Copyright (c) Cypress Semiconductor 2012. All Rights Reserved.
*
*  This file is generated by the Device Editor on Application Generation.
*  It contains equates that are useful in writing code relating to GPIO
*  related values.
*  
*  DO NOT EDIT THIS FILE MANUALLY, AS IT IS OVERWRITTEN!!!
*  Edits to this file will not be preserved.
*/
// Encoder_RightA address and mask defines
#pragma	ioport	Encoder_RightA_Data_ADDR:	0x4
BYTE			Encoder_RightA_Data_ADDR;
#pragma	ioport	Encoder_RightA_DriveMode_0_ADDR:	0x104
BYTE			Encoder_RightA_DriveMode_0_ADDR;
#pragma	ioport	Encoder_RightA_DriveMode_1_ADDR:	0x105
BYTE			Encoder_RightA_DriveMode_1_ADDR;
#pragma	ioport	Encoder_RightA_DriveMode_2_ADDR:	0x7
BYTE			Encoder_RightA_DriveMode_2_ADDR;
#pragma	ioport	Encoder_RightA_GlobalSelect_ADDR:	0x6
BYTE			Encoder_RightA_GlobalSelect_ADDR;
#pragma	ioport	Encoder_RightA_IntCtrl_0_ADDR:	0x106
BYTE			Encoder_RightA_IntCtrl_0_ADDR;
#pragma	ioport	Encoder_RightA_IntCtrl_1_ADDR:	0x107
BYTE			Encoder_RightA_IntCtrl_1_ADDR;
#pragma	ioport	Encoder_RightA_IntEn_ADDR:	0x5
BYTE			Encoder_RightA_IntEn_ADDR;
#define Encoder_RightA_MASK 0x80
#pragma	ioport	Encoder_RightA_MUXBusCtrl_ADDR:	0x1d9
BYTE			Encoder_RightA_MUXBusCtrl_ADDR;
// Encoder_RightB address and mask defines
#pragma	ioport	Encoder_RightB_Data_ADDR:	0x4
BYTE			Encoder_RightB_Data_ADDR;
#pragma	ioport	Encoder_RightB_DriveMode_0_ADDR:	0x104
BYTE			Encoder_RightB_DriveMode_0_ADDR;
#pragma	ioport	Encoder_RightB_DriveMode_1_ADDR:	0x105
BYTE			Encoder_RightB_DriveMode_1_ADDR;
#pragma	ioport	Encoder_RightB_DriveMode_2_ADDR:	0x7
BYTE			Encoder_RightB_DriveMode_2_ADDR;
#pragma	ioport	Encoder_RightB_GlobalSelect_ADDR:	0x6
BYTE			Encoder_RightB_GlobalSelect_ADDR;
#pragma	ioport	Encoder_RightB_IntCtrl_0_ADDR:	0x106
BYTE			Encoder_RightB_IntCtrl_0_ADDR;
#pragma	ioport	Encoder_RightB_IntCtrl_1_ADDR:	0x107
BYTE			Encoder_RightB_IntCtrl_1_ADDR;
#pragma	ioport	Encoder_RightB_IntEn_ADDR:	0x5
BYTE			Encoder_RightB_IntEn_ADDR;
#define Encoder_RightB_MASK 0x20
#pragma	ioport	Encoder_RightB_MUXBusCtrl_ADDR:	0x1d9
BYTE			Encoder_RightB_MUXBusCtrl_ADDR;
// Encoder_LeftA address and mask defines
#pragma	ioport	Encoder_LeftA_Data_ADDR:	0x4
BYTE			Encoder_LeftA_Data_ADDR;
#pragma	ioport	Encoder_LeftA_DriveMode_0_ADDR:	0x104
BYTE			Encoder_LeftA_DriveMode_0_ADDR;
#pragma	ioport	Encoder_LeftA_DriveMode_1_ADDR:	0x105
BYTE			Encoder_LeftA_DriveMode_1_ADDR;
#pragma	ioport	Encoder_LeftA_DriveMode_2_ADDR:	0x7
BYTE			Encoder_LeftA_DriveMode_2_ADDR;
#pragma	ioport	Encoder_LeftA_GlobalSelect_ADDR:	0x6
BYTE			Encoder_LeftA_GlobalSelect_ADDR;
#pragma	ioport	Encoder_LeftA_IntCtrl_0_ADDR:	0x106
BYTE			Encoder_LeftA_IntCtrl_0_ADDR;
#pragma	ioport	Encoder_LeftA_IntCtrl_1_ADDR:	0x107
BYTE			Encoder_LeftA_IntCtrl_1_ADDR;
#pragma	ioport	Encoder_LeftA_IntEn_ADDR:	0x5
BYTE			Encoder_LeftA_IntEn_ADDR;
#define Encoder_LeftA_MASK 0x10
#pragma	ioport	Encoder_LeftA_MUXBusCtrl_ADDR:	0x1d9
BYTE			Encoder_LeftA_MUXBusCtrl_ADDR;
// Encoder_LeftB address and mask defines
#pragma	ioport	Encoder_LeftB_Data_ADDR:	0x4
BYTE			Encoder_LeftB_Data_ADDR;
#pragma	ioport	Encoder_LeftB_DriveMode_0_ADDR:	0x104
BYTE			Encoder_LeftB_DriveMode_0_ADDR;
#pragma	ioport	Encoder_LeftB_DriveMode_1_ADDR:	0x105
BYTE			Encoder_LeftB_DriveMode_1_ADDR;
#pragma	ioport	Encoder_LeftB_DriveMode_2_ADDR:	0x7
BYTE			Encoder_LeftB_DriveMode_2_ADDR;
#pragma	ioport	Encoder_LeftB_GlobalSelect_ADDR:	0x6
BYTE			Encoder_LeftB_GlobalSelect_ADDR;
#pragma	ioport	Encoder_LeftB_IntCtrl_0_ADDR:	0x106
BYTE			Encoder_LeftB_IntCtrl_0_ADDR;
#pragma	ioport	Encoder_LeftB_IntCtrl_1_ADDR:	0x107
BYTE			Encoder_LeftB_IntCtrl_1_ADDR;
#pragma	ioport	Encoder_LeftB_IntEn_ADDR:	0x5
BYTE			Encoder_LeftB_IntEn_ADDR;
#define Encoder_LeftB_MASK 0x40
#pragma	ioport	Encoder_LeftB_MUXBusCtrl_ADDR:	0x1d9
BYTE			Encoder_LeftB_MUXBusCtrl_ADDR;
// IR_Front address and mask defines
#pragma	ioport	IR_Front_Data_ADDR:	0x0
BYTE			IR_Front_Data_ADDR;
#pragma	ioport	IR_Front_DriveMode_0_ADDR:	0x100
BYTE			IR_Front_DriveMode_0_ADDR;
#pragma	ioport	IR_Front_DriveMode_1_ADDR:	0x101
BYTE			IR_Front_DriveMode_1_ADDR;
#pragma	ioport	IR_Front_DriveMode_2_ADDR:	0x3
BYTE			IR_Front_DriveMode_2_ADDR;
#pragma	ioport	IR_Front_GlobalSelect_ADDR:	0x2
BYTE			IR_Front_GlobalSelect_ADDR;
#pragma	ioport	IR_Front_IntCtrl_0_ADDR:	0x102
BYTE			IR_Front_IntCtrl_0_ADDR;
#pragma	ioport	IR_Front_IntCtrl_1_ADDR:	0x103
BYTE			IR_Front_IntCtrl_1_ADDR;
#pragma	ioport	IR_Front_IntEn_ADDR:	0x1
BYTE			IR_Front_IntEn_ADDR;
#define IR_Front_MASK 0x1
#pragma	ioport	IR_Front_MUXBusCtrl_ADDR:	0x1d8
BYTE			IR_Front_MUXBusCtrl_ADDR;
// IR_Left address and mask defines
#pragma	ioport	IR_Left_Data_ADDR:	0x0
BYTE			IR_Left_Data_ADDR;
#pragma	ioport	IR_Left_DriveMode_0_ADDR:	0x100
BYTE			IR_Left_DriveMode_0_ADDR;
#pragma	ioport	IR_Left_DriveMode_1_ADDR:	0x101
BYTE			IR_Left_DriveMode_1_ADDR;
#pragma	ioport	IR_Left_DriveMode_2_ADDR:	0x3
BYTE			IR_Left_DriveMode_2_ADDR;
#pragma	ioport	IR_Left_GlobalSelect_ADDR:	0x2
BYTE			IR_Left_GlobalSelect_ADDR;
#pragma	ioport	IR_Left_IntCtrl_0_ADDR:	0x102
BYTE			IR_Left_IntCtrl_0_ADDR;
#pragma	ioport	IR_Left_IntCtrl_1_ADDR:	0x103
BYTE			IR_Left_IntCtrl_1_ADDR;
#pragma	ioport	IR_Left_IntEn_ADDR:	0x1
BYTE			IR_Left_IntEn_ADDR;
#define IR_Left_MASK 0x2
#pragma	ioport	IR_Left_MUXBusCtrl_ADDR:	0x1d8
BYTE			IR_Left_MUXBusCtrl_ADDR;
// IR_Right address and mask defines
#pragma	ioport	IR_Right_Data_ADDR:	0x0
BYTE			IR_Right_Data_ADDR;
#pragma	ioport	IR_Right_DriveMode_0_ADDR:	0x100
BYTE			IR_Right_DriveMode_0_ADDR;
#pragma	ioport	IR_Right_DriveMode_1_ADDR:	0x101
BYTE			IR_Right_DriveMode_1_ADDR;
#pragma	ioport	IR_Right_DriveMode_2_ADDR:	0x3
BYTE			IR_Right_DriveMode_2_ADDR;
#pragma	ioport	IR_Right_GlobalSelect_ADDR:	0x2
BYTE			IR_Right_GlobalSelect_ADDR;
#pragma	ioport	IR_Right_IntCtrl_0_ADDR:	0x102
BYTE			IR_Right_IntCtrl_0_ADDR;
#pragma	ioport	IR_Right_IntCtrl_1_ADDR:	0x103
BYTE			IR_Right_IntCtrl_1_ADDR;
#pragma	ioport	IR_Right_IntEn_ADDR:	0x1
BYTE			IR_Right_IntEn_ADDR;
#define IR_Right_MASK 0x4
#pragma	ioport	IR_Right_MUXBusCtrl_ADDR:	0x1d8
BYTE			IR_Right_MUXBusCtrl_ADDR;
// LED_Right address and mask defines
#pragma	ioport	LED_Right_Data_ADDR:	0x0
BYTE			LED_Right_Data_ADDR;
#pragma	ioport	LED_Right_DriveMode_0_ADDR:	0x100
BYTE			LED_Right_DriveMode_0_ADDR;
#pragma	ioport	LED_Right_DriveMode_1_ADDR:	0x101
BYTE			LED_Right_DriveMode_1_ADDR;
#pragma	ioport	LED_Right_DriveMode_2_ADDR:	0x3
BYTE			LED_Right_DriveMode_2_ADDR;
#pragma	ioport	LED_Right_GlobalSelect_ADDR:	0x2
BYTE			LED_Right_GlobalSelect_ADDR;
#pragma	ioport	LED_Right_IntCtrl_0_ADDR:	0x102
BYTE			LED_Right_IntCtrl_0_ADDR;
#pragma	ioport	LED_Right_IntCtrl_1_ADDR:	0x103
BYTE			LED_Right_IntCtrl_1_ADDR;
#pragma	ioport	LED_Right_IntEn_ADDR:	0x1
BYTE			LED_Right_IntEn_ADDR;
#define LED_Right_MASK 0x20
#pragma	ioport	LED_Right_MUXBusCtrl_ADDR:	0x1d8
BYTE			LED_Right_MUXBusCtrl_ADDR;
// Pot_UI address and mask defines
#pragma	ioport	Pot_UI_Data_ADDR:	0x0
BYTE			Pot_UI_Data_ADDR;
#pragma	ioport	Pot_UI_DriveMode_0_ADDR:	0x100
BYTE			Pot_UI_DriveMode_0_ADDR;
#pragma	ioport	Pot_UI_DriveMode_1_ADDR:	0x101
BYTE			Pot_UI_DriveMode_1_ADDR;
#pragma	ioport	Pot_UI_DriveMode_2_ADDR:	0x3
BYTE			Pot_UI_DriveMode_2_ADDR;
#pragma	ioport	Pot_UI_GlobalSelect_ADDR:	0x2
BYTE			Pot_UI_GlobalSelect_ADDR;
#pragma	ioport	Pot_UI_IntCtrl_0_ADDR:	0x102
BYTE			Pot_UI_IntCtrl_0_ADDR;
#pragma	ioport	Pot_UI_IntCtrl_1_ADDR:	0x103
BYTE			Pot_UI_IntCtrl_1_ADDR;
#pragma	ioport	Pot_UI_IntEn_ADDR:	0x1
BYTE			Pot_UI_IntEn_ADDR;
#define Pot_UI_MASK 0x40
#pragma	ioport	Pot_UI_MUXBusCtrl_ADDR:	0x1d8
BYTE			Pot_UI_MUXBusCtrl_ADDR;
// Pump_Comparator address and mask defines
#pragma	ioport	Pump_Comparator_Data_ADDR:	0x0
BYTE			Pump_Comparator_Data_ADDR;
#pragma	ioport	Pump_Comparator_DriveMode_0_ADDR:	0x100
BYTE			Pump_Comparator_DriveMode_0_ADDR;
#pragma	ioport	Pump_Comparator_DriveMode_1_ADDR:	0x101
BYTE			Pump_Comparator_DriveMode_1_ADDR;
#pragma	ioport	Pump_Comparator_DriveMode_2_ADDR:	0x3
BYTE			Pump_Comparator_DriveMode_2_ADDR;
#pragma	ioport	Pump_Comparator_GlobalSelect_ADDR:	0x2
BYTE			Pump_Comparator_GlobalSelect_ADDR;
#pragma	ioport	Pump_Comparator_IntCtrl_0_ADDR:	0x102
BYTE			Pump_Comparator_IntCtrl_0_ADDR;
#pragma	ioport	Pump_Comparator_IntCtrl_1_ADDR:	0x103
BYTE			Pump_Comparator_IntCtrl_1_ADDR;
#pragma	ioport	Pump_Comparator_IntEn_ADDR:	0x1
BYTE			Pump_Comparator_IntEn_ADDR;
#define Pump_Comparator_MASK 0x80
#pragma	ioport	Pump_Comparator_MUXBusCtrl_ADDR:	0x1d8
BYTE			Pump_Comparator_MUXBusCtrl_ADDR;
// EzI2CsSDA address and mask defines
#pragma	ioport	EzI2CsSDA_Data_ADDR:	0x4
BYTE			EzI2CsSDA_Data_ADDR;
#pragma	ioport	EzI2CsSDA_DriveMode_0_ADDR:	0x104
BYTE			EzI2CsSDA_DriveMode_0_ADDR;
#pragma	ioport	EzI2CsSDA_DriveMode_1_ADDR:	0x105
BYTE			EzI2CsSDA_DriveMode_1_ADDR;
#pragma	ioport	EzI2CsSDA_DriveMode_2_ADDR:	0x7
BYTE			EzI2CsSDA_DriveMode_2_ADDR;
#pragma	ioport	EzI2CsSDA_GlobalSelect_ADDR:	0x6
BYTE			EzI2CsSDA_GlobalSelect_ADDR;
#pragma	ioport	EzI2CsSDA_IntCtrl_0_ADDR:	0x106
BYTE			EzI2CsSDA_IntCtrl_0_ADDR;
#pragma	ioport	EzI2CsSDA_IntCtrl_1_ADDR:	0x107
BYTE			EzI2CsSDA_IntCtrl_1_ADDR;
#pragma	ioport	EzI2CsSDA_IntEn_ADDR:	0x5
BYTE			EzI2CsSDA_IntEn_ADDR;
#define EzI2CsSDA_MASK 0x1
#pragma	ioport	EzI2CsSDA_MUXBusCtrl_ADDR:	0x1d9
BYTE			EzI2CsSDA_MUXBusCtrl_ADDR;
// EzI2CsSCL address and mask defines
#pragma	ioport	EzI2CsSCL_Data_ADDR:	0x4
BYTE			EzI2CsSCL_Data_ADDR;
#pragma	ioport	EzI2CsSCL_DriveMode_0_ADDR:	0x104
BYTE			EzI2CsSCL_DriveMode_0_ADDR;
#pragma	ioport	EzI2CsSCL_DriveMode_1_ADDR:	0x105
BYTE			EzI2CsSCL_DriveMode_1_ADDR;
#pragma	ioport	EzI2CsSCL_DriveMode_2_ADDR:	0x7
BYTE			EzI2CsSCL_DriveMode_2_ADDR;
#pragma	ioport	EzI2CsSCL_GlobalSelect_ADDR:	0x6
BYTE			EzI2CsSCL_GlobalSelect_ADDR;
#pragma	ioport	EzI2CsSCL_IntCtrl_0_ADDR:	0x106
BYTE			EzI2CsSCL_IntCtrl_0_ADDR;
#pragma	ioport	EzI2CsSCL_IntCtrl_1_ADDR:	0x107
BYTE			EzI2CsSCL_IntCtrl_1_ADDR;
#pragma	ioport	EzI2CsSCL_IntEn_ADDR:	0x5
BYTE			EzI2CsSCL_IntEn_ADDR;
#define EzI2CsSCL_MASK 0x2
#pragma	ioport	EzI2CsSCL_MUXBusCtrl_ADDR:	0x1d9
BYTE			EzI2CsSCL_MUXBusCtrl_ADDR;
// IR_Emitter address and mask defines
#pragma	ioport	IR_Emitter_Data_ADDR:	0x4
BYTE			IR_Emitter_Data_ADDR;
#pragma	ioport	IR_Emitter_DriveMode_0_ADDR:	0x104
BYTE			IR_Emitter_DriveMode_0_ADDR;
#pragma	ioport	IR_Emitter_DriveMode_1_ADDR:	0x105
BYTE			IR_Emitter_DriveMode_1_ADDR;
#pragma	ioport	IR_Emitter_DriveMode_2_ADDR:	0x7
BYTE			IR_Emitter_DriveMode_2_ADDR;
#pragma	ioport	IR_Emitter_GlobalSelect_ADDR:	0x6
BYTE			IR_Emitter_GlobalSelect_ADDR;
#pragma	ioport	IR_Emitter_IntCtrl_0_ADDR:	0x106
BYTE			IR_Emitter_IntCtrl_0_ADDR;
#pragma	ioport	IR_Emitter_IntCtrl_1_ADDR:	0x107
BYTE			IR_Emitter_IntCtrl_1_ADDR;
#pragma	ioport	IR_Emitter_IntEn_ADDR:	0x5
BYTE			IR_Emitter_IntEn_ADDR;
#define IR_Emitter_MASK 0x4
#pragma	ioport	IR_Emitter_MUXBusCtrl_ADDR:	0x1d9
BYTE			IR_Emitter_MUXBusCtrl_ADDR;
// LED_Left address and mask defines
#pragma	ioport	LED_Left_Data_ADDR:	0x4
BYTE			LED_Left_Data_ADDR;
#pragma	ioport	LED_Left_DriveMode_0_ADDR:	0x104
BYTE			LED_Left_DriveMode_0_ADDR;
#pragma	ioport	LED_Left_DriveMode_1_ADDR:	0x105
BYTE			LED_Left_DriveMode_1_ADDR;
#pragma	ioport	LED_Left_DriveMode_2_ADDR:	0x7
BYTE			LED_Left_DriveMode_2_ADDR;
#pragma	ioport	LED_Left_GlobalSelect_ADDR:	0x6
BYTE			LED_Left_GlobalSelect_ADDR;
#pragma	ioport	LED_Left_IntCtrl_0_ADDR:	0x106
BYTE			LED_Left_IntCtrl_0_ADDR;
#pragma	ioport	LED_Left_IntCtrl_1_ADDR:	0x107
BYTE			LED_Left_IntCtrl_1_ADDR;
#pragma	ioport	LED_Left_IntEn_ADDR:	0x5
BYTE			LED_Left_IntEn_ADDR;
#define LED_Left_MASK 0x8
#pragma	ioport	LED_Left_MUXBusCtrl_ADDR:	0x1d9
BYTE			LED_Left_MUXBusCtrl_ADDR;
// MotorEnable_R address and mask defines
#pragma	ioport	MotorEnable_R_Data_ADDR:	0x8
BYTE			MotorEnable_R_Data_ADDR;
#pragma	ioport	MotorEnable_R_DriveMode_0_ADDR:	0x108
BYTE			MotorEnable_R_DriveMode_0_ADDR;
#pragma	ioport	MotorEnable_R_DriveMode_1_ADDR:	0x109
BYTE			MotorEnable_R_DriveMode_1_ADDR;
#pragma	ioport	MotorEnable_R_DriveMode_2_ADDR:	0xb
BYTE			MotorEnable_R_DriveMode_2_ADDR;
#pragma	ioport	MotorEnable_R_GlobalSelect_ADDR:	0xa
BYTE			MotorEnable_R_GlobalSelect_ADDR;
#pragma	ioport	MotorEnable_R_IntCtrl_0_ADDR:	0x10a
BYTE			MotorEnable_R_IntCtrl_0_ADDR;
#pragma	ioport	MotorEnable_R_IntCtrl_1_ADDR:	0x10b
BYTE			MotorEnable_R_IntCtrl_1_ADDR;
#pragma	ioport	MotorEnable_R_IntEn_ADDR:	0x9
BYTE			MotorEnable_R_IntEn_ADDR;
#define MotorEnable_R_MASK 0x1
#pragma	ioport	MotorEnable_R_MUXBusCtrl_ADDR:	0x1da
BYTE			MotorEnable_R_MUXBusCtrl_ADDR;
// MotorEnable_L address and mask defines
#pragma	ioport	MotorEnable_L_Data_ADDR:	0x8
BYTE			MotorEnable_L_Data_ADDR;
#pragma	ioport	MotorEnable_L_DriveMode_0_ADDR:	0x108
BYTE			MotorEnable_L_DriveMode_0_ADDR;
#pragma	ioport	MotorEnable_L_DriveMode_1_ADDR:	0x109
BYTE			MotorEnable_L_DriveMode_1_ADDR;
#pragma	ioport	MotorEnable_L_DriveMode_2_ADDR:	0xb
BYTE			MotorEnable_L_DriveMode_2_ADDR;
#pragma	ioport	MotorEnable_L_GlobalSelect_ADDR:	0xa
BYTE			MotorEnable_L_GlobalSelect_ADDR;
#pragma	ioport	MotorEnable_L_IntCtrl_0_ADDR:	0x10a
BYTE			MotorEnable_L_IntCtrl_0_ADDR;
#pragma	ioport	MotorEnable_L_IntCtrl_1_ADDR:	0x10b
BYTE			MotorEnable_L_IntCtrl_1_ADDR;
#pragma	ioport	MotorEnable_L_IntEn_ADDR:	0x9
BYTE			MotorEnable_L_IntEn_ADDR;
#define MotorEnable_L_MASK 0x2
#pragma	ioport	MotorEnable_L_MUXBusCtrl_ADDR:	0x1da
BYTE			MotorEnable_L_MUXBusCtrl_ADDR;
// LED_Front address and mask defines
#pragma	ioport	LED_Front_Data_ADDR:	0x8
BYTE			LED_Front_Data_ADDR;
#pragma	ioport	LED_Front_DriveMode_0_ADDR:	0x108
BYTE			LED_Front_DriveMode_0_ADDR;
#pragma	ioport	LED_Front_DriveMode_1_ADDR:	0x109
BYTE			LED_Front_DriveMode_1_ADDR;
#pragma	ioport	LED_Front_DriveMode_2_ADDR:	0xb
BYTE			LED_Front_DriveMode_2_ADDR;
#pragma	ioport	LED_Front_GlobalSelect_ADDR:	0xa
BYTE			LED_Front_GlobalSelect_ADDR;
#pragma	ioport	LED_Front_IntCtrl_0_ADDR:	0x10a
BYTE			LED_Front_IntCtrl_0_ADDR;
#pragma	ioport	LED_Front_IntCtrl_1_ADDR:	0x10b
BYTE			LED_Front_IntCtrl_1_ADDR;
#pragma	ioport	LED_Front_IntEn_ADDR:	0x9
BYTE			LED_Front_IntEn_ADDR;
#define LED_Front_MASK 0x4
#pragma	ioport	LED_Front_MUXBusCtrl_ADDR:	0x1da
BYTE			LED_Front_MUXBusCtrl_ADDR;
// Pump_Switch address and mask defines
#pragma	ioport	Pump_Switch_Data_ADDR:	0x8
BYTE			Pump_Switch_Data_ADDR;
#pragma	ioport	Pump_Switch_DriveMode_0_ADDR:	0x108
BYTE			Pump_Switch_DriveMode_0_ADDR;
#pragma	ioport	Pump_Switch_DriveMode_1_ADDR:	0x109
BYTE			Pump_Switch_DriveMode_1_ADDR;
#pragma	ioport	Pump_Switch_DriveMode_2_ADDR:	0xb
BYTE			Pump_Switch_DriveMode_2_ADDR;
#pragma	ioport	Pump_Switch_GlobalSelect_ADDR:	0xa
BYTE			Pump_Switch_GlobalSelect_ADDR;
#pragma	ioport	Pump_Switch_IntCtrl_0_ADDR:	0x10a
BYTE			Pump_Switch_IntCtrl_0_ADDR;
#pragma	ioport	Pump_Switch_IntCtrl_1_ADDR:	0x10b
BYTE			Pump_Switch_IntCtrl_1_ADDR;
#pragma	ioport	Pump_Switch_IntEn_ADDR:	0x9
BYTE			Pump_Switch_IntEn_ADDR;
#define Pump_Switch_MASK 0x8
#pragma	ioport	Pump_Switch_MUXBusCtrl_ADDR:	0x1da
BYTE			Pump_Switch_MUXBusCtrl_ADDR;
// MotorDrive_1A address and mask defines
#pragma	ioport	MotorDrive_1A_Data_ADDR:	0x8
BYTE			MotorDrive_1A_Data_ADDR;
#pragma	ioport	MotorDrive_1A_DriveMode_0_ADDR:	0x108
BYTE			MotorDrive_1A_DriveMode_0_ADDR;
#pragma	ioport	MotorDrive_1A_DriveMode_1_ADDR:	0x109
BYTE			MotorDrive_1A_DriveMode_1_ADDR;
#pragma	ioport	MotorDrive_1A_DriveMode_2_ADDR:	0xb
BYTE			MotorDrive_1A_DriveMode_2_ADDR;
#pragma	ioport	MotorDrive_1A_GlobalSelect_ADDR:	0xa
BYTE			MotorDrive_1A_GlobalSelect_ADDR;
#pragma	ioport	MotorDrive_1A_IntCtrl_0_ADDR:	0x10a
BYTE			MotorDrive_1A_IntCtrl_0_ADDR;
#pragma	ioport	MotorDrive_1A_IntCtrl_1_ADDR:	0x10b
BYTE			MotorDrive_1A_IntCtrl_1_ADDR;
#pragma	ioport	MotorDrive_1A_IntEn_ADDR:	0x9
BYTE			MotorDrive_1A_IntEn_ADDR;
#define MotorDrive_1A_MASK 0x10
#pragma	ioport	MotorDrive_1A_MUXBusCtrl_ADDR:	0x1da
BYTE			MotorDrive_1A_MUXBusCtrl_ADDR;
// MotorDrive_3A address and mask defines
#pragma	ioport	MotorDrive_3A_Data_ADDR:	0x8
BYTE			MotorDrive_3A_Data_ADDR;
#pragma	ioport	MotorDrive_3A_DriveMode_0_ADDR:	0x108
BYTE			MotorDrive_3A_DriveMode_0_ADDR;
#pragma	ioport	MotorDrive_3A_DriveMode_1_ADDR:	0x109
BYTE			MotorDrive_3A_DriveMode_1_ADDR;
#pragma	ioport	MotorDrive_3A_DriveMode_2_ADDR:	0xb
BYTE			MotorDrive_3A_DriveMode_2_ADDR;
#pragma	ioport	MotorDrive_3A_GlobalSelect_ADDR:	0xa
BYTE			MotorDrive_3A_GlobalSelect_ADDR;
#pragma	ioport	MotorDrive_3A_IntCtrl_0_ADDR:	0x10a
BYTE			MotorDrive_3A_IntCtrl_0_ADDR;
#pragma	ioport	MotorDrive_3A_IntCtrl_1_ADDR:	0x10b
BYTE			MotorDrive_3A_IntCtrl_1_ADDR;
#pragma	ioport	MotorDrive_3A_IntEn_ADDR:	0x9
BYTE			MotorDrive_3A_IntEn_ADDR;
#define MotorDrive_3A_MASK 0x20
#pragma	ioport	MotorDrive_3A_MUXBusCtrl_ADDR:	0x1da
BYTE			MotorDrive_3A_MUXBusCtrl_ADDR;
// MotorDrive_2A address and mask defines
#pragma	ioport	MotorDrive_2A_Data_ADDR:	0x8
BYTE			MotorDrive_2A_Data_ADDR;
#pragma	ioport	MotorDrive_2A_DriveMode_0_ADDR:	0x108
BYTE			MotorDrive_2A_DriveMode_0_ADDR;
#pragma	ioport	MotorDrive_2A_DriveMode_1_ADDR:	0x109
BYTE			MotorDrive_2A_DriveMode_1_ADDR;
#pragma	ioport	MotorDrive_2A_DriveMode_2_ADDR:	0xb
BYTE			MotorDrive_2A_DriveMode_2_ADDR;
#pragma	ioport	MotorDrive_2A_GlobalSelect_ADDR:	0xa
BYTE			MotorDrive_2A_GlobalSelect_ADDR;
#pragma	ioport	MotorDrive_2A_IntCtrl_0_ADDR:	0x10a
BYTE			MotorDrive_2A_IntCtrl_0_ADDR;
#pragma	ioport	MotorDrive_2A_IntCtrl_1_ADDR:	0x10b
BYTE			MotorDrive_2A_IntCtrl_1_ADDR;
#pragma	ioport	MotorDrive_2A_IntEn_ADDR:	0x9
BYTE			MotorDrive_2A_IntEn_ADDR;
#define MotorDrive_2A_MASK 0x40
#pragma	ioport	MotorDrive_2A_MUXBusCtrl_ADDR:	0x1da
BYTE			MotorDrive_2A_MUXBusCtrl_ADDR;
// MotorDrive_4A address and mask defines
#pragma	ioport	MotorDrive_4A_Data_ADDR:	0x8
BYTE			MotorDrive_4A_Data_ADDR;
#pragma	ioport	MotorDrive_4A_DriveMode_0_ADDR:	0x108
BYTE			MotorDrive_4A_DriveMode_0_ADDR;
#pragma	ioport	MotorDrive_4A_DriveMode_1_ADDR:	0x109
BYTE			MotorDrive_4A_DriveMode_1_ADDR;
#pragma	ioport	MotorDrive_4A_DriveMode_2_ADDR:	0xb
BYTE			MotorDrive_4A_DriveMode_2_ADDR;
#pragma	ioport	MotorDrive_4A_GlobalSelect_ADDR:	0xa
BYTE			MotorDrive_4A_GlobalSelect_ADDR;
#pragma	ioport	MotorDrive_4A_IntCtrl_0_ADDR:	0x10a
BYTE			MotorDrive_4A_IntCtrl_0_ADDR;
#pragma	ioport	MotorDrive_4A_IntCtrl_1_ADDR:	0x10b
BYTE			MotorDrive_4A_IntCtrl_1_ADDR;
#pragma	ioport	MotorDrive_4A_IntEn_ADDR:	0x9
BYTE			MotorDrive_4A_IntEn_ADDR;
#define MotorDrive_4A_MASK 0x80
#pragma	ioport	MotorDrive_4A_MUXBusCtrl_ADDR:	0x1da
BYTE			MotorDrive_4A_MUXBusCtrl_ADDR;
