//*****************************************************************************
//*****************************************************************************
//  FILENAME: Counter8_Tick.h
//   Version: 2.60, Updated on 2012/3/2 at 9:13:11
//  Generated by PSoC Designer 5.2.2551
//
//  DESCRIPTION: Counter8 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2012. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef Counter8_Tick_INCLUDE
#define Counter8_Tick_INCLUDE

#include <m8c.h>

#pragma fastcall16 Counter8_Tick_EnableInt
#pragma fastcall16 Counter8_Tick_DisableInt
#pragma fastcall16 Counter8_Tick_Start
#pragma fastcall16 Counter8_Tick_Stop
#pragma fastcall16 Counter8_Tick_bReadCounter              // Read  DR0
#pragma fastcall16 Counter8_Tick_WritePeriod               // Write DR1
#pragma fastcall16 Counter8_Tick_bReadCompareValue         // Read  DR2
#pragma fastcall16 Counter8_Tick_WriteCompareValue         // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bCounter8_Tick_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 bCounter8_Tick_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the Counter8_Tick API.
//-------------------------------------------------

extern void Counter8_Tick_EnableInt(void);                           // Proxy Class 1
extern void Counter8_Tick_DisableInt(void);                          // Proxy Class 1
extern void Counter8_Tick_Start(void);                               // Proxy Class 1
extern void Counter8_Tick_Stop(void);                                // Proxy Class 1
extern BYTE Counter8_Tick_bReadCounter(void);                        // Proxy Class 1
extern void Counter8_Tick_WritePeriod(BYTE bPeriod);                 // Proxy Class 1
extern BYTE Counter8_Tick_bReadCompareValue(void);                   // Proxy Class 2
extern void Counter8_Tick_WriteCompareValue(BYTE bCompareValue);     // Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bCounter8_Tick_ReadCounter(void);            // Deprecated
extern BYTE bCounter8_Tick_ReadCompareValue(void);       // Deprecated


//--------------------------------------------------
// Constants for Counter8_Tick API's.
//--------------------------------------------------

#define Counter8_Tick_CONTROL_REG_START_BIT    ( 0x01 )
#define Counter8_Tick_INT_REG_ADDR             ( 0x0e1 )
#define Counter8_Tick_INT_MASK                 ( 0x01 )


//--------------------------------------------------
// Constants for Counter8_Tick user defined values
//--------------------------------------------------

#define Counter8_Tick_PERIOD                   ( 0x00 )
#define Counter8_Tick_COMPARE_VALUE            ( 0x00 )


//-------------------------------------------------
// Register Addresses for Counter8_Tick
//-------------------------------------------------

#pragma ioport  Counter8_Tick_COUNTER_REG:  0x020          //DR0 Count register
BYTE            Counter8_Tick_COUNTER_REG;
#pragma ioport  Counter8_Tick_PERIOD_REG:   0x021          //DR1 Period register
BYTE            Counter8_Tick_PERIOD_REG;
#pragma ioport  Counter8_Tick_COMPARE_REG:  0x022          //DR2 Compare register
BYTE            Counter8_Tick_COMPARE_REG;
#pragma ioport  Counter8_Tick_CONTROL_REG:  0x023          //Control register
BYTE            Counter8_Tick_CONTROL_REG;
#pragma ioport  Counter8_Tick_FUNC_REG: 0x120              //Function register
BYTE            Counter8_Tick_FUNC_REG;
#pragma ioport  Counter8_Tick_INPUT_REG:    0x121          //Input register
BYTE            Counter8_Tick_INPUT_REG;
#pragma ioport  Counter8_Tick_OUTPUT_REG:   0x122          //Output register
BYTE            Counter8_Tick_OUTPUT_REG;
#pragma ioport  Counter8_Tick_INT_REG:       0x0e1         //Interrupt Mask Register
BYTE            Counter8_Tick_INT_REG;


//-------------------------------------------------
// Counter8_Tick Macro 'Functions'
//-------------------------------------------------

#define Counter8_Tick_Start_M \
   Counter8_Tick_CONTROL_REG |=  Counter8_Tick_CONTROL_REG_START_BIT

#define Counter8_Tick_Stop_M  \
   Counter8_Tick_CONTROL_REG &= ~Counter8_Tick_CONTROL_REG_START_BIT

#define Counter8_Tick_EnableInt_M   \
   M8C_EnableIntMask(Counter8_Tick_INT_REG, Counter8_Tick_INT_MASK)

#define Counter8_Tick_DisableInt_M  \
   M8C_DisableIntMask(Counter8_Tick_INT_REG, Counter8_Tick_INT_MASK)

#endif
// end of file Counter8_Tick.h
